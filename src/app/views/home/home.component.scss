@use "functions" as fun;
@use "variables/colors";
@use "variables/buttons";
@use "mixins";


$icon-user-size: 228;
$icon-skill-size: 147;
$icon-user-position: 16;


.home-header {
  margin-bottom: 25vh;
  margin-top: 25vh;
  max-width: fun.convert-px-to-rem(988);

  h1 {
    letter-spacing: clamp(fun.convert-px-to-rem(3.5), 3vw, fun.convert-px-to-rem(5));
    line-height: clamp(fun.convert-px-to-rem(48), 10vw, fun.convert-px-to-rem(72));
  }

  h2 {
    letter-spacing: clamp(fun.convert-px-to-rem(1.8), 3vw, fun.convert-px-to-rem(2));
    line-height: clamp(fun.convert-px-to-rem(24), 5vw, fun.convert-px-to-rem(36));
    margin-bottom: clamp(fun.convert-px-to-rem(24), 5vw, fun.convert-px-to-rem(36));
  }
}

.card {
  position: relative;

  .card-header {
    letter-spacing: fun.convert-px-to-rem(2.5);
  }

  .icon {
    opacity: .15;
    position: absolute;

    &.user {
      height: fun.convert-px-to-rem($icon-user-size);
      right: fun.convert-px-to-rem($icon-user-position);
      top: fun.convert-px-to-rem($icon-user-position);
      width: fun.convert-px-to-rem($icon-user-size);
    }

    &.skill {
      height: fun.convert-px-to-rem($icon-skill-size);
      right: fun.convert-px-to-rem(32);
      top: fun.convert-px-to-rem(32);
      width: fun.convert-px-to-rem($icon-skill-size);
    }
  }

  p {
    &:last-of-type {
      margin-bottom: 0;
    }
  }
}

a.card {
  transition: buttons.$link-transition, box-shadow buttons.$link-transition-duration;

  &:hover {
    box-shadow: 0 0 0 fun.convert-px-to-rem(2) map-get(colors.$theme, "primary");
  }
}

.skill-list {
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 0;

    .badge {
      display: inline-flex;
      background-color: rgba(map-get(colors.$theme, "secondary"), .5);

      &:nth-child(odd) {
        background-color: rgba(map-get(colors.$theme, "secondary"), .25);
      }
    }
  }
}
